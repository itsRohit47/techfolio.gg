generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    username      String?   @unique
    customDomain  String?   @unique
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    bio           String?
    headline      String?
    location      String?
    github        String?
    linkedin      String?
    template      Int?
    isPro         Boolean?
    accounts      Account[]
    sessions      Session[]
    projectsId    String?
    assets        Asset[]
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
}

enum Status {
    PUBLISHED
    DRAFT
    ARCHIVED
}

model Asset {
    id          String   @id @default(cuid())
    title       String
    description String?
    icon        String?
    media       String[]
    body        String?
    type        String
    status      Status   @default(DRAFT)
    userId      String
    tags        String[]
    user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}
